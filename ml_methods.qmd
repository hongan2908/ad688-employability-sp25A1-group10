---
title: "ML Methods"
subtitle: "Clustering and Regression Analysis on Job Market Trends"
author:
  - name: Shreya Mani
    affiliations:
      - id: bu
        name: Boston University
        city: Boston
        state: MA
format: 
  html:
    toc: true
    number-sections: true
    df-print: paged
---

# Introduction

This document explores machine learning applications on the job market dataset using unsupervised and supervised learning techniques.  
We apply **KMeans Clustering** to segment jobs based on salary and experience, and **Multiple Linear Regression** to predict salaries based on key job factors.

# Data Preparation

We used the cleaned dataset from previous analysis stages.  
Focus columns for ML were:
- **Salary**
- **MIN_YEARS_EXPERIENCE**
- **REMOTE_TYPE_NAME**

Missing values were already handled. Encoding was applied to the categorical variable `REMOTE_TYPE_NAME` for regression.

# KMeans Clustering: Segmenting Jobs by Salary and Experience

## Elbow Method for Finding Optimal Number of Clusters
```{python}
#| label: data-cleaning
#| echo: true
#| warning: false
#| message: false

# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import os

# Set display options
pd.set_option('display.max_columns', None)
pd.set_option('display.max_rows', 100)

# Auto-download CSV if missing
csv_path = 'region_analysis/lightcast_job_postings.csv'
if not os.path.exists(csv_path):
    print(f"{csv_path} not found! Attempting to download...")

    os.makedirs('region_analysis', exist_ok=True)

    try:
        import gdown
    except ImportError:
        !pip install gdown
        import gdown

    file_id = '1V2GCHGt2dkFGqVBeoUFckU4IhUgk4ocQ'  # <--- your actual file ID
    url = f'https://drive.google.com/uc?id={file_id}'
    gdown.download(url, csv_path, quiet=False)
    print("Download complete!")
else:
    print(f"{csv_path} found. Proceeding...")

# Load the dataset
df = pd.read_csv('region_analysis/lightcast_job_postings.csv')
df.head()
df.tail()
```
```{python}
#| label: ml_methods
#| echo: true
#| warning: false
#| message: false

from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

# Prepare data
cluster_df = df[['SALARY', 'MIN_YEARS_EXPERIENCE']].dropna()

# Calculate inertia for different k
inertia = []
k_range = range(1, 11)

for k in k_range:
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(cluster_df)
    inertia.append(kmeans.inertia_)

# Plot the elbow curve
plt.figure(figsize=(8,5))
plt.plot(k_range, inertia, marker='o')
plt.title('Elbow Method to Find Optimal k')
plt.xlabel('Number of Clusters')
plt.ylabel('Inertia')
plt.grid()
plt.show()
```