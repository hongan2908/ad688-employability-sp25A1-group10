
title: "Skill Gap Analysis"

author: "Ritusri Mohan"

format: 

  html:

    toc: true

    number-sections: true

---



# Skill Gap Analysis



In this analysis, we evaluate the current skill levels of our team and compare them with industry requirements based on job postings data. This will help identify skill gaps and propose improvement strategies.



## Team Skill Level Data


---
title: "Skill Gap Analysis"
format: 
  html:
    toc: true
    number-sections: true
    df-print: paged
---


```{python}
#| label: clean-data
#| echo: true
#| warning: false
#| message: false

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import os

# Load dataset
csv_path = 'region_analysis/lightcast_job_postings.csv'
df = pd.read_csv(csv_path)

# Drop unnecessary columns
columns_to_drop = [
    "ID", "URL", "ACTIVE_URLS", "DUPLICATES", "LAST_UPDATED_TIMESTAMP",
    "NAICS2", "NAICS3", "NAICS4", "NAICS5", "NAICS6",
    "SOC_2", "SOC_3", "SOC_5"
]
df.drop(columns=columns_to_drop, inplace=True)

# Drop columns with >50% missing
df.dropna(thresh=len(df) * 0.5, axis=1, inplace=True)

# Fill missing values
for col in df.select_dtypes(include=[np.number]):
    df[col].fillna(df[col].median(), inplace=True)

for col in df.select_dtypes(include=['object']):
    df[col].fillna("Unknown", inplace=True)

# Drop duplicates
df.drop_duplicates(subset=["TITLE", "COMPANY", "LOCATION", "POSTED"], keep="first", inplace=True)
```

## Top 5 and Top 8 Software Skills from Job Postings

```{python}
#| label: top-software-skills
#| echo: true

# Get top software skills from job postings
software_skills = (
    df['SOFTWARE_SKILLS_NAME']
    .dropna()
    .str.replace(r'[\[\]\n]', '', regex=True)  # Remove brackets and newlines
    .str.split(',')
    .explode()
    .str.strip()
)

# Filter out empty strings
software_skills = software_skills[software_skills != '']

# Get top 5 most frequent software skills
top_5_software_skills = software_skills.value_counts().head(5)

# Extract skill names
top_5_skills = top_5_software_skills.index.tolist()

print("Top 5 software skills from job postings:")
print(top_5_software_skills)

# Get top 8 most frequent software skills
top_8_software_skills = software_skills.value_counts().head(8)

# Extract skill names
top_8_skills = top_8_software_skills.index.tolist()

print("Top 8 software skills from job postings:")
print(top_8_software_skills)

```


```{python}
#| label: team-skills-5
#| echo: true

import pandas as pd

# Define team skill levels (Proficiency scale: 1=Beginner, 5=Expert)
skills_data = {
    "Name": ["Shreya", "An Ly", "Advait", "Ritusri"],
    "SQL (Programming Language)": [3, 2, 2, 3],
    "Microsoft Excel": [4, 3, 3, 4],
    "Python (Programming Language)": [3, 3, 3, 3],
    "SAP Applications": [2, 1, 3, 2],
    "Dashboard": [2, 2, 3, 4]
}

df_skills = pd.DataFrame(skills_data)
df_skills.set_index("Name", inplace=True)
df_skills


```

```{python}
#| label: heatmap-top5
#| echo: true

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Team skills for top 5
skills_data_top5 = {
    "Name": ["Shreya", "An Ly", "Advait", "Ritusri"],
    "SQL (Programming Language)": [3, 2, 2, 3],
    "Microsoft Excel": [4, 3, 3, 4],
    "Python (Programming Language)": [3, 3, 3, 3],
    "SAP Applications": [2, 1, 3, 2],
    "Dashboard": [2, 2, 3, 4]
}

df_skills_top5 = pd.DataFrame(skills_data_top5).set_index("Name")

# Plot Heatmap 1
plt.figure(figsize=(10, 5))
sns.heatmap(df_skills_top5, annot=True, cmap="YlOrBr", linewidths=0.5)
plt.title("Team Skill Levels – Top 5 Software Skills")
plt.show()
```

```{python}
#| label: team-skills-8
#| echo: true

import pandas as pd

# Define team skill levels (Proficiency scale: 1=Beginner, 5=Expert)
skills_data1 = {
    "Name": ["Shreya", "An Ly", "Advait", "Ritusri"],
    "SQL (Programming Language)": [3, 2, 2, 3],
    "Microsoft Excel": [4, 3, 3, 4],
    "Python (Programming Language)": [3, 3, 3, 3],
    "SAP Applications": [2, 1, 3, 2],
    "Dashboard": [2, 2, 3, 4],
    "Tableau (Business Intelligence Software)":[0, 0, 0, 0],
    "Power BI":[0, 0, 0, 0],
    "Microsoft Office":[0, 0, 0, 0],
    
}

df_skills1 = pd.DataFrame(skills_data1)
df_skills1.set_index("Name", inplace=True)
df_skills1

```


```{python}
#| label: heatmap-top8
#| echo: true

import pandas as pd

# Define team skill levels (Proficiency scale: 1=Beginner, 5=Expert)
skills_data1 = {
    "Name": ["Shreya", "An Ly", "Advait", "Ritusri"],
    "SQL (Programming Language)": [3, 2, 2, 3],
    "Microsoft Excel": [4, 3, 3, 4],
    "Python (Programming Language)": [3, 3, 3, 3],
    "SAP Applications": [2, 1, 3, 2],
    "Dashboard": [2, 2, 3, 4],
    "Tableau (Business Intelligence Software)":[0, 0, 0, 0],
    "Power BI":[0, 0, 0, 0],
    "Microsoft Office":[0, 0, 0, 0],
    
}
df_skills_top8 = pd.DataFrame(skills_data1).set_index("Name")

# Plot Heatmap 2
plt.figure(figsize=(10, 5))
sns.heatmap(df_skills_top8, annot=True, cmap="YlOrBr", linewidths=0.5)
plt.title("Team Skill Levels – Top 8 Software Skills")
plt.show()
```

### Improvement Plan
The heatmap analysis indicates that while the team has solid grounding in fundamental IT tools, there are significant gaps in certain enterprise and visualization technologies that are highly demanded in job postings. Addressing these gaps will elevate the team’s capabilities and make them more market-ready.

SQL (Programming Language)
Although the team has intermediate proficiency in SQL, moving towards expert-level understanding is essential. SQL remains one of the most requested skills across IT and data-centric roles. Advanced topics like complex joins, window functions, performance tuning, and writing optimized queries should be covered. Recommended resources include Coursera's SQL for Data Science and DataCamp SQL Career Track.

Python (Programming Language)
Python is the cornerstone of automation, analytics, and machine learning. The team should focus on advancing their skills beyond basic scripting. This includes learning about data manipulation (Pandas), building small projects, and exploring libraries used in data science or automation. Free resources like the Google Python Crash Course and the IBM Python for Data Science (Coursera) can be leveraged.

SAP Applications
SAP is currently one of the weakest areas within the team. Enterprise software skills like SAP are critical in corporate environments. Team members should target introductory SAP courses to gain a basic understanding of navigation, reporting, and common SAP modules. Free options like OpenSAP are recommended to start with.

Dashboarding Tools (Power BI / Tableau)
Visual storytelling and data presentation are crucial skills in modern IT roles. As seen in the analysis, there is little to no current exposure to Power BI and Tableau. Training should start with beginner-friendly courses that teach how to create interactive dashboards and perform basic data analysis. Tableau Public and Microsoft Learn for Power BI offer excellent free resources.

Microsoft Excel
While the team is relatively advanced in Excel, moving towards expert proficiency will unlock greater efficiencies. Topics like VBA macros, Power Query, pivot tables, and advanced formulas should be prioritized. Recommended platforms include LinkedIn Learning and Excel Skills for Business (Coursera).

Tableau, Power BI, and Microsoft Office (Missing Skills)
The missing ratings for Tableau, Power BI, and Microsoft Office indicate complete lack of knowledge. These tools are essential for reporting, business communication, and project collaboration in IT environments. Each team member should aim to reach at least intermediate level proficiency through self-paced courses and hands-on practice.

#### Suggested Team Learning Plan
To close these gaps systematically:

Weekly Learning Sessions: Rotate weekly responsibilities where each member shares what they learned about a specific skill.

Pair Learning: Pair up team members with stronger skills (e.g., SQL, Python) to support others.

Micro-Certifications: Encourage completion of short certifications within 4–6 weeks (e.g., Tableau Desktop Specialist, Power BI Fundamentals).

Practical Projects: Apply new skills through internal mock projects like building dashboards or writing Python scripts.

Tracking Progress: Regularly assess skill levels every month and update the heatmap to measure progress.

### Conclusion
The skill gap analysis clearly highlights the team’s current strengths and opportunities for improvement. While foundational skills like SQL, Python, and Excel are relatively well developed, enterprise tools like SAP, Tableau, and Power BI remain significant blind spots.

By following the improvement plan and encouraging structured learning, the team will not only close existing gaps but also align with modern IT and data industry expectations. This proactive approach will make the team more versatile, industry-relevant, and ready for advanced career opportunities.








