{
  "hash": "fe8ff007fb827ccd56345b9370cb8878",
  "result": {
    "engine": "jupyter",
    "markdown": "<!--\n\n---\ntitle: \"AI vs Traditional Salary Analysis\"\nsubtitle: \"Salary & Compensation Trends - Job Market Analysis 2024\"\nauthor:\n  - name: Group 10\n    affiliations:\n      - id: bu\n        name: Boston University\n        city: Boston\n        state: MA\nformat: \n  html:\n    toc: true\n    number-sections: true\n    df-print: paged\n---\n\n\n\n-->\n\n::: {#655dda39 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\n\n# Load cleaned dataset (update path)\ndf = pd.read_csv('region_analysis/lightcast_job_postings.csv')\n\n# Convert SALARY to numeric and drop nulls\ndf['SALARY'] = pd.to_numeric(df['SALARY'], errors='coerce')\ndf = df.dropna(subset=['SALARY'])\n\n# Tag AI vs Non-AI jobs\ndef tag_ai(row):\n    title = str(row['TITLE_NAME']).lower()\n    industry = str(row['NAICS_2022_2_NAME']).lower()\n    \n    if ('ai' in title or 'artificial intelligence' in title or 'machine learning' in title or\n        'data scientist' in title or 'deep learning' in title or 'nlp' in title or 'ml' in title or\n        'data engineer' in title or 'ml engineer' in title or 'scientist' in title or\n        'computer vision' in title or 'robotics' in title or\n        'professional, scientific, and technical services' in industry or 'information' in industry):\n        return 'AI Career'\n    else:\n        return 'Non-AI Career'\n\ndf['Career_Type'] = df.apply(tag_ai, axis=1)\nprint(df['Career_Type'].value_counts())\n\n# Group by STATE and Career Type → Avg Salary\nstate_salary = df.groupby(['STATE_NAME', 'Career_Type'])['SALARY'].mean().round(2).reset_index()\nstate_salary = state_salary.sort_values(by='SALARY', ascending=False)\n\n# Show top 5 for each category\nprint(\"Top 5 States for AI Careers:\")\nprint(state_salary[state_salary['Career_Type'] == 'AI Career'].head(5))\n\nprint(\"\\nTop 5 States for Non-AI Careers:\")\nprint(state_salary[state_salary['Career_Type'] == 'Non-AI Career'].head(5))\n\n# Optional: save to CSV\n# state_salary.to_csv('statewise_ai_vs_nonai_salary.csv', index=False)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\honga\\AppData\\Local\\Temp\\ipykernel_34596\\3429200541.py:4: DtypeWarning:\n\nColumns (19,30) have mixed types. Specify dtype option on import or set low_memory=False.\n\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nCareer_Type\nNon-AI Career    19095\nAI Career        11713\nName: count, dtype: int64\nTop 5 States for AI Careers:\n   STATE_NAME Career_Type     SALARY\n6    Arkansas   AI Career  144133.42\n50    Montana   AI Career  143398.80\n88    Vermont   AI Career  142056.59\n70   Oklahoma   AI Career  141950.69\n48   Missouri   AI Career  140295.18\n\nTop 5 States for Non-AI Careers:\n       STATE_NAME    Career_Type     SALARY\n13    Connecticut  Non-AI Career  119981.12\n15       Delaware  Non-AI Career  118958.14\n89        Vermont  Non-AI Career  118892.86\n91       Virginia  Non-AI Career  118879.33\n41  Massachusetts  Non-AI Career  117756.62\n```\n:::\n:::\n\n\n::: {#262ddf74 .cell execution_count=2}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\n\n# Top 5 AI states\ntop_ai = state_salary[state_salary['Career_Type'] == 'AI Career'].head(5)\n\n# Top 5 Non-AI states\ntop_nonai = state_salary[state_salary['Career_Type'] == 'Non-AI Career'].head(5)\n\n# Plot AI Career Salaries\nplt.figure(figsize=(8, 5))\nplt.barh(top_ai['STATE_NAME'], top_ai['SALARY'])\nplt.xlabel(\"Average Salary ($)\")\nplt.title(\"Top 5 States for AI Careers\")\nplt.gca().invert_yaxis()\nplt.tight_layout()\nplt.savefig(\"top_ai_states.png\")\nplt.show()\n\n# Plot Non-AI Career Salaries\nplt.figure(figsize=(8, 5))\nplt.barh(top_nonai['STATE_NAME'], top_nonai['SALARY'], color='orange')\nplt.xlabel(\"Average Salary ($)\")\nplt.title(\"Top 5 States for Non-AI Careers\")\nplt.gca().invert_yaxis()\nplt.tight_layout()\nplt.savefig(\"top_nonai_states.png\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](ai_vs_tradsalary_analysis_files/figure-html/cell-3-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display}\n![](ai_vs_tradsalary_analysis_files/figure-html/cell-3-output-2.png){}\n:::\n:::\n\n\n::: {#a21e4427 .cell execution_count=3}\n``` {.python .cell-code}\n# Count of jobs used to compute avg salary\nstate_counts = df.groupby(['STATE_NAME', 'Career_Type'])['SALARY'].agg(['mean', 'count']).round(2).reset_index()\nstate_counts = state_counts.sort_values(by='mean', ascending=False)\n\n# Show top 10 AI states by average salary + count\nprint(state_counts[state_counts['Career_Type'] == 'AI Career'].head(10))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        STATE_NAME Career_Type       mean  count\n6         Arkansas   AI Career  144133.42    127\n50         Montana   AI Career  143398.80     30\n88         Vermont   AI Career  142056.59     32\n70        Oklahoma   AI Career  141950.69    144\n48        Missouri   AI Career  140295.18    192\n12     Connecticut   AI Career  140156.16    167\n42        Michigan   AI Career  140097.41    396\n30          Kansas   AI Career  138880.23    122\n76    Rhode Island   AI Career  138855.30     66\n78  South Carolina   AI Career  138763.10     82\n```\n:::\n:::\n\n\n::: {#c596de33 .cell execution_count=4}\n``` {.python .cell-code}\nall_ai_states = state_counts[state_counts['Career_Type'] == 'AI Career']\nprint(all_ai_states['STATE_NAME'].unique())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n['Arkansas' 'Montana' 'Vermont' 'Oklahoma' 'Missouri' 'Connecticut'\n 'Michigan' 'Kansas' 'Rhode Island' 'South Carolina' 'Nebraska'\n 'California' 'Washington' 'New Jersey' 'Louisiana' 'Iowa'\n 'North Carolina' 'Pennsylvania' 'Indiana' 'Tennessee' 'Alabama'\n 'Delaware' 'Florida' 'Minnesota' 'Nevada' 'Oregon' 'Idaho' 'Wisconsin'\n 'Illinois' 'Arizona' 'Virginia' 'Maryland' 'Ohio' 'Texas' 'Kentucky'\n 'Maine' 'Massachusetts' 'Colorado' 'Georgia'\n 'Washington, D.C. (District of Columbia)' 'New York' 'New Hampshire'\n 'Mississippi' 'Wyoming' 'South Dakota' 'New Mexico' 'Utah' 'Hawaii'\n 'North Dakota' 'West Virginia' 'Alaska']\n```\n:::\n:::\n\n\n::: {#ad0f5d48 .cell execution_count=5}\n``` {.python .cell-code}\nreliable_ai_states = state_counts[\n    (state_counts['Career_Type'] == 'AI Career') &\n    (state_counts['count'] >= 50)\n].sort_values(by='mean', ascending=False)\n\nprint(reliable_ai_states.head(10))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        STATE_NAME Career_Type       mean  count\n6         Arkansas   AI Career  144133.42    127\n70        Oklahoma   AI Career  141950.69    144\n48        Missouri   AI Career  140295.18    192\n12     Connecticut   AI Career  140156.16    167\n42        Michigan   AI Career  140097.41    396\n30          Kansas   AI Career  138880.23    122\n76    Rhode Island   AI Career  138855.30     66\n78  South Carolina   AI Career  138763.10     82\n52        Nebraska   AI Career  138461.39     75\n8       California   AI Career  138374.79   1483\n```\n:::\n:::\n\n\n::: {#5b1790e3 .cell execution_count=6}\n``` {.python .cell-code}\nbig_states = ['Massachusetts', 'New York', 'New Jersey', 'California', 'Texas']\n\nai_counts_big_states = df[\n    (df['Career_Type'] == 'AI Career') & \n    (df['STATE_NAME'].isin(big_states))\n].groupby('STATE_NAME')['SALARY'].agg(['count', 'mean']).round(2).sort_values(by='count', ascending=False)\n\nai_counts_big_states.rename(columns={'count': 'AI Job Postings', 'mean': 'Avg Salary ($)'}, inplace=True)\n\nprint(ai_counts_big_states)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               AI Job Postings  Avg Salary ($)\nSTATE_NAME                                    \nCalifornia                1483       138374.79\nTexas                      973       130898.40\nNew York                   606       125033.63\nNew Jersey                 350       137628.47\nMassachusetts              300       129245.66\n```\n:::\n:::\n\n\n::: {#884055fd .cell execution_count=7}\n``` {.python .cell-code}\nai_median_salary = df[df['Career_Type'] == 'AI Career'].groupby('STATE_NAME')['SALARY'].median().round(2).reset_index()\nai_counts = df[df['Career_Type'] == 'AI Career'].groupby('STATE_NAME')['SALARY'].count().reset_index(name='Job_Count')\n\n# Merge them\nai_summary = pd.merge(ai_median_salary, ai_counts, on='STATE_NAME')\nai_summary.columns = ['State', 'Median Salary ($)', 'AI Job Count']\n\n# Optional: Filter for states with decent sample size\nai_summary = ai_summary[ai_summary['AI Job Count'] >= 50]\n\n# Sort by Median Salary\nai_summary = ai_summary.sort_values(by='Median Salary ($)', ascending=False)\n\nprint(ai_summary.head(10))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             State  Median Salary ($)  AI Job Count\n24        Missouri           143000.0           192\n21        Michigan           143000.0           396\n35        Oklahoma           142997.0           144\n29      New Jersey           137500.0           350\n41       Tennessee           137375.0           226\n3         Arkansas           137000.0           127\n26        Nebraska           134500.0            75\n4       California           133865.0          1483\n39  South Carolina           133525.0            82\n49       Wisconsin           132800.0           167\n```\n:::\n:::\n\n\n::: {#4fcf0f5d .cell execution_count=8}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\n\ntop_states = ai_summary.head(10)\n\nplt.figure(figsize=(10, 6))\nplt.barh(top_states['State'], top_states['Median Salary ($)'], color='teal')\nplt.xlabel(\"Median Salary ($)\")\nplt.title(\"Top 10 States for AI Careers (Median Salary, ≥50 Jobs)\")\nplt.gca().invert_yaxis()\nplt.tight_layout()\nplt.savefig(\"top_ai_states_median.png\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](ai_vs_tradsalary_analysis_files/figure-html/cell-9-output-1.png){}\n:::\n:::\n\n\n## Urban vs Rural States – Median AI Salary Comparison\n\nThis chart compares the median salaries of AI careers in selected **urban** (California, New York, Massachusetts) and **rural** (Arkansas, Montana, Nebraska) states. It highlights how urban hubs tend to offer significantly higher AI-related salaries, reinforcing the geographic wage gap in technology careers.\n\n![](Data/urban_vs_rural_ai_salaries.png)\n\n::: {#4f50cf12 .cell execution_count=9}\n``` {.python .cell-code}\n# Heatmap\nimport seaborn as sns \npivot = df.groupby(['STATE_NAME', 'Career_Type'])['SALARY'].median().unstack()\nplt.figure(figsize=(14, 6))\nsns.heatmap(pivot, annot=True, fmt=\".0f\", cmap=\"coolwarm\", linewidths=0.5)\nplt.title(\"Median Salary by State and Career Type\")\nplt.xlabel(\"Career Type\")\nplt.ylabel(\"State\")\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](ai_vs_tradsalary_analysis_files/figure-html/cell-10-output-1.png){}\n:::\n:::\n\n\n::: {#860aafb8 .cell execution_count=10}\n``` {.python .cell-code}\n# Group by state\nai_summary = df[df['Career_Type'] == 'AI Career'].groupby('STATE_NAME')['SALARY'].agg(\n    Median_Salary='median', Job_Count='count', Std_Dev='std').reset_index()\n\nplt.figure(figsize=(10, 6))\nplt.scatter(ai_summary['Median_Salary'], ai_summary['Job_Count'],\n            s=ai_summary['Job_Count'] / 1.5,\n            c=ai_summary['Std_Dev'], cmap='viridis', alpha=0.7, edgecolors='black')\n# Add state name labels to the bubbles\nfor i, row in ai_summary.iterrows():\n    if row['Job_Count'] > 300:  # Label only big bubbles to reduce clutter\n        plt.text(row['Median_Salary'], row['Job_Count'], row['STATE_NAME'],\n                 fontsize=8, ha='center', va='center', color='black')\n\nplt.colorbar(label='Salary Std Dev')\nplt.xlabel('Median Salary ($)')\nplt.ylabel('AI Job Count')\nplt.title('AI Career Opportunities: Salary vs Availability by State')\nplt.grid(True, linestyle='--', alpha=0.5)\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](ai_vs_tradsalary_analysis_files/figure-html/cell-11-output-1.png){}\n:::\n:::\n\n\n::: {#485f696b .cell execution_count=11}\n``` {.python .cell-code}\n# Reference lines\nmedian_salary_cutoff = ai_summary['Median_Salary'].median()\nmedian_job_count_cutoff = ai_summary['Job_Count'].median()\n\nplt.figure(figsize=(10, 6))\nplt.scatter(ai_summary['Median_Salary'], ai_summary['Job_Count'],\n            s=ai_summary['Job_Count'] / 1.5,\n            c=ai_summary['Std_Dev'], cmap='viridis', alpha=0.7, edgecolors='black')\n\n# Add quadrant lines\nplt.axvline(median_salary_cutoff, color='gray', linestyle='--', linewidth=1)\nplt.axhline(median_job_count_cutoff, color='gray', linestyle='--', linewidth=1)\n\n# Label top states\nfor i, row in ai_summary.iterrows():\n    if row['Job_Count'] > 300:\n        plt.text(row['Median_Salary'], row['Job_Count'], row['STATE_NAME'],\n                 fontsize=8, ha='center', va='center', color='black')\n\nplt.colorbar(label='Salary Std Dev')\nplt.xlabel('Median Salary ($)')\nplt.ylabel('AI Job Count')\nplt.title('AI Career Opportunities: Salary vs Availability (with Reference Lines)')\nplt.grid(True, linestyle='--', alpha=0.5)\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](ai_vs_tradsalary_analysis_files/figure-html/cell-12-output-1.png){}\n:::\n:::\n\n\n### AI Salaries by State Heatmap\n\n::: {#51955b1f .cell execution_count=12}\n``` {.python .cell-code}\nimport plotly.express as px\n\n# Mapping of full state names to 2-letter codes\nstate_abbrev = {\n    'Alabama': 'AL', 'Alaska': 'AK', 'Arizona': 'AZ', 'Arkansas': 'AR', 'California': 'CA',\n    'Colorado': 'CO', 'Connecticut': 'CT', 'Delaware': 'DE', 'Florida': 'FL', 'Georgia': 'GA',\n    'Hawaii': 'HI', 'Idaho': 'ID', 'Illinois': 'IL', 'Indiana': 'IN', 'Iowa': 'IA',\n    'Kansas': 'KS', 'Kentucky': 'KY', 'Louisiana': 'LA', 'Maine': 'ME', 'Maryland': 'MD',\n    'Massachusetts': 'MA', 'Michigan': 'MI', 'Minnesota': 'MN', 'Mississippi': 'MS',\n    'Missouri': 'MO', 'Montana': 'MT', 'Nebraska': 'NE', 'Nevada': 'NV', 'New Hampshire': 'NH',\n    'New Jersey': 'NJ', 'New Mexico': 'NM', 'New York': 'NY', 'North Carolina': 'NC',\n    'North Dakota': 'ND', 'Ohio': 'OH', 'Oklahoma': 'OK', 'Oregon': 'OR', 'Pennsylvania': 'PA',\n    'Rhode Island': 'RI', 'South Carolina': 'SC', 'South Dakota': 'SD', 'Tennessee': 'TN',\n    'Texas': 'TX', 'Utah': 'UT', 'Vermont': 'VT', 'Virginia': 'VA', 'Washington': 'WA',\n    'West Virginia': 'WV', 'Wisconsin': 'WI', 'Wyoming': 'WY', 'District of Columbia': 'DC'\n}\n\n# Create dataframe with state abbreviations\nai_state_medians = df[df['Career_Type'] == 'AI Career'].groupby('STATE_NAME')['SALARY'].median().reset_index()\nai_state_medians['STATE_ABBR'] = ai_state_medians['STATE_NAME'].map(state_abbrev)\n\n# Now plot\nfig = px.choropleth(ai_state_medians,\n                    locations='STATE_ABBR',\n                    locationmode=\"USA-states\",\n                    color='SALARY',\n                    scope=\"usa\",\n                    color_continuous_scale=\"Viridis\",\n                    labels={'SALARY':'Median AI Salary'})\nfig.update_layout(title_text='Median AI Salary by State', geo=dict(showlakes=True))\nfig.show()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n        <script type=\"text/javascript\">\n        window.PlotlyConfig = {MathJaxConfig: 'local'};\n        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n        </script>\n        <script type=\"module\">import \"https://cdn.plot.ly/plotly-3.0.0.min\"</script>\n        \n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-3.0.0.min.js\"></script>                <div id=\"0f1a4810-e489-49cc-8fc2-b78da6ad441c\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                window.PLOTLYENV=window.PLOTLYENV || {};                                if (document.getElementById(\"0f1a4810-e489-49cc-8fc2-b78da6ad441c\")) {                    Plotly.newPlot(                        \"0f1a4810-e489-49cc-8fc2-b78da6ad441c\",                        [{\"coloraxis\":\"coloraxis\",\"geo\":\"geo\",\"hovertemplate\":\"STATE_ABBR=%{location}\\u003cbr\\u003eMedian AI Salary=%{z}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"locationmode\":\"USA-states\",\"locations\":[\"AL\",\"AK\",\"AZ\",\"AR\",\"CA\",\"CO\",\"CT\",\"DE\",\"FL\",\"GA\",\"HI\",\"ID\",\"IL\",\"IN\",\"IA\",\"KS\",\"KY\",\"LA\",\"ME\",\"MD\",\"MA\",\"MI\",\"MN\",\"MS\",\"MO\",\"MT\",\"NE\",\"NV\",\"NH\",\"NJ\",\"NM\",\"NY\",\"NC\",\"ND\",\"OH\",\"OK\",\"OR\",\"PA\",\"RI\",\"SC\",\"SD\",\"TN\",\"TX\",\"UT\",\"VT\",\"VA\",\"WA\",null,\"WV\",\"WI\",\"WY\"],\"name\":\"\",\"z\":{\"dtype\":\"f8\",\"bdata\":\"AAAAAHDt\\u002f0AAAAAAQMf2QAAAAADAvP5AAAAAAEC5AEEAAAAASFcAQQAAAADAvP5AAAAAADgDAEEAAAAAcMD\\u002fQAAAAABA3P9AAAAAAHDA\\u002f0AAAAAAsOT6QAAAAABA3P9AAAAAAAC9\\u002f0AAAAAAsOn+QAAAAABA3P9AAAAAAMC8\\u002fkAAAAAAQNz\\u002fQAAAAACg\\u002fv9AAAAAAPjq\\u002fEAAAAAAQNz\\u002fQAAAAACg3v1AAAAAAMB0AUEAAAAAuL7\\u002fQAAAAACwHPtAAAAAAMB0AUEAAAAAMC4AQQAAAAAgawBBAAAAAEDc\\u002f0AAAAAAoKz8QAAAAADgyABBAAAAALhy+0AAAAAAgA39QAAAAABA3P9AAAAAAOCe90AAAAAAwLz+QAAAAACodAFBAAAAAGB7\\u002f0AAAAAAQNz\\u002fQAAAAACIFwBBAAAAAKhMAEEAAAAAmJD9QAAAAAD4xABBAAAAANCd\\u002f0AAAAAA4C7+QAAAAADw7wBBAAAAAEDc\\u002f0AAAAAAAL3\\u002fQAAAAAAATP1AAAAAAJCE+EAAAAAAADYAQQAAAADwXPxA\"},\"type\":\"choropleth\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermap\":[{\"type\":\"scattermap\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"},\"margin\":{\"b\":0,\"l\":0,\"r\":0,\"t\":30}}},\"geo\":{\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"center\":{},\"scope\":\"usa\",\"showlakes\":true},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"Median AI Salary\"}},\"colorscale\":[[0.0,\"#440154\"],[0.1111111111111111,\"#482878\"],[0.2222222222222222,\"#3e4989\"],[0.3333333333333333,\"#31688e\"],[0.4444444444444444,\"#26828e\"],[0.5555555555555556,\"#1f9e89\"],[0.6666666666666666,\"#35b779\"],[0.7777777777777778,\"#6ece58\"],[0.8888888888888888,\"#b5de2b\"],[1.0,\"#fde725\"]]},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Median AI Salary by State\"}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('0f1a4810-e489-49cc-8fc2-b78da6ad441c');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };            </script>        </div>\n```\n:::\n:::\n\n\n::: {#0b160cb1 .cell execution_count=13}\n``` {.python .cell-code}\nimport plotly.graph_objects as go\n\n# Prepare the base choropleth layer\nfig = go.Figure(data=go.Choropleth(\n    locations=ai_state_medians['STATE_ABBR'],  # 2-letter codes\n    z=ai_state_medians['SALARY'],\n    locationmode='USA-states',\n    colorscale='Viridis',\n    colorbar_title='Median AI Salary',\n    text=ai_state_medians['STATE_NAME'],  # hover text\n    hoverinfo='text+z'\n))\n\n# Add text annotations: state abbreviations\nfor i, row in ai_state_medians.iterrows():\n    fig.add_trace(go.Scattergeo(\n        locationmode='USA-states',\n        lon=[None],  # plotly doesn’t support precise state centroids natively\n        lat=[None],\n        text=row['STATE_ABBR'],\n        mode='text',\n        textfont=dict(color='white', size=10),\n        name=row['STATE_ABBR'],\n        showlegend=False\n    ))\n\n# Update map layout\nfig.update_layout(\n    title_text='Median AI Salary by State (with State Labels)',\n    geo=dict(\n        scope='usa',\n        showlakes=True,\n        lakecolor='rgb(255, 255, 255)'\n    )\n)\n\nfig.show()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-3.0.0.min.js\"></script>                <div id=\"82444678-c3ff-4213-b7b7-950765aa87f9\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                window.PLOTLYENV=window.PLOTLYENV || {};                                if (document.getElementById(\"82444678-c3ff-4213-b7b7-950765aa87f9\")) {                    Plotly.newPlot(                        \"82444678-c3ff-4213-b7b7-950765aa87f9\",                        [{\"colorbar\":{\"title\":{\"text\":\"Median AI Salary\"}},\"colorscale\":[[0.0,\"#440154\"],[0.1111111111111111,\"#482878\"],[0.2222222222222222,\"#3e4989\"],[0.3333333333333333,\"#31688e\"],[0.4444444444444444,\"#26828e\"],[0.5555555555555556,\"#1f9e89\"],[0.6666666666666666,\"#35b779\"],[0.7777777777777778,\"#6ece58\"],[0.8888888888888888,\"#b5de2b\"],[1.0,\"#fde725\"]],\"hoverinfo\":\"text+z\",\"locationmode\":\"USA-states\",\"locations\":[\"AL\",\"AK\",\"AZ\",\"AR\",\"CA\",\"CO\",\"CT\",\"DE\",\"FL\",\"GA\",\"HI\",\"ID\",\"IL\",\"IN\",\"IA\",\"KS\",\"KY\",\"LA\",\"ME\",\"MD\",\"MA\",\"MI\",\"MN\",\"MS\",\"MO\",\"MT\",\"NE\",\"NV\",\"NH\",\"NJ\",\"NM\",\"NY\",\"NC\",\"ND\",\"OH\",\"OK\",\"OR\",\"PA\",\"RI\",\"SC\",\"SD\",\"TN\",\"TX\",\"UT\",\"VT\",\"VA\",\"WA\",null,\"WV\",\"WI\",\"WY\"],\"text\":[\"Alabama\",\"Alaska\",\"Arizona\",\"Arkansas\",\"California\",\"Colorado\",\"Connecticut\",\"Delaware\",\"Florida\",\"Georgia\",\"Hawaii\",\"Idaho\",\"Illinois\",\"Indiana\",\"Iowa\",\"Kansas\",\"Kentucky\",\"Louisiana\",\"Maine\",\"Maryland\",\"Massachusetts\",\"Michigan\",\"Minnesota\",\"Mississippi\",\"Missouri\",\"Montana\",\"Nebraska\",\"Nevada\",\"New Hampshire\",\"New Jersey\",\"New Mexico\",\"New York\",\"North Carolina\",\"North Dakota\",\"Ohio\",\"Oklahoma\",\"Oregon\",\"Pennsylvania\",\"Rhode Island\",\"South Carolina\",\"South Dakota\",\"Tennessee\",\"Texas\",\"Utah\",\"Vermont\",\"Virginia\",\"Washington\",\"Washington, D.C. (District of Columbia)\",\"West Virginia\",\"Wisconsin\",\"Wyoming\"],\"z\":{\"dtype\":\"f8\",\"bdata\":\"AAAAAHDt\\u002f0AAAAAAQMf2QAAAAADAvP5AAAAAAEC5AEEAAAAASFcAQQAAAADAvP5AAAAAADgDAEEAAAAAcMD\\u002fQAAAAABA3P9AAAAAAHDA\\u002f0AAAAAAsOT6QAAAAABA3P9AAAAAAAC9\\u002f0AAAAAAsOn+QAAAAABA3P9AAAAAAMC8\\u002fkAAAAAAQNz\\u002fQAAAAACg\\u002fv9AAAAAAPjq\\u002fEAAAAAAQNz\\u002fQAAAAACg3v1AAAAAAMB0AUEAAAAAuL7\\u002fQAAAAACwHPtAAAAAAMB0AUEAAAAAMC4AQQAAAAAgawBBAAAAAEDc\\u002f0AAAAAAoKz8QAAAAADgyABBAAAAALhy+0AAAAAAgA39QAAAAABA3P9AAAAAAOCe90AAAAAAwLz+QAAAAACodAFBAAAAAGB7\\u002f0AAAAAAQNz\\u002fQAAAAACIFwBBAAAAAKhMAEEAAAAAmJD9QAAAAAD4xABBAAAAANCd\\u002f0AAAAAA4C7+QAAAAADw7wBBAAAAAEDc\\u002f0AAAAAAAL3\\u002fQAAAAAAATP1AAAAAAJCE+EAAAAAAADYAQQAAAADwXPxA\"},\"type\":\"choropleth\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"AL\",\"showlegend\":false,\"text\":\"AL\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"AK\",\"showlegend\":false,\"text\":\"AK\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"AZ\",\"showlegend\":false,\"text\":\"AZ\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"AR\",\"showlegend\":false,\"text\":\"AR\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"CA\",\"showlegend\":false,\"text\":\"CA\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"CO\",\"showlegend\":false,\"text\":\"CO\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"CT\",\"showlegend\":false,\"text\":\"CT\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"DE\",\"showlegend\":false,\"text\":\"DE\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"FL\",\"showlegend\":false,\"text\":\"FL\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"GA\",\"showlegend\":false,\"text\":\"GA\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"HI\",\"showlegend\":false,\"text\":\"HI\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"ID\",\"showlegend\":false,\"text\":\"ID\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"IL\",\"showlegend\":false,\"text\":\"IL\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"IN\",\"showlegend\":false,\"text\":\"IN\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"IA\",\"showlegend\":false,\"text\":\"IA\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"KS\",\"showlegend\":false,\"text\":\"KS\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"KY\",\"showlegend\":false,\"text\":\"KY\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"LA\",\"showlegend\":false,\"text\":\"LA\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"ME\",\"showlegend\":false,\"text\":\"ME\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"MD\",\"showlegend\":false,\"text\":\"MD\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"MA\",\"showlegend\":false,\"text\":\"MA\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"MI\",\"showlegend\":false,\"text\":\"MI\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"MN\",\"showlegend\":false,\"text\":\"MN\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"MS\",\"showlegend\":false,\"text\":\"MS\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"MO\",\"showlegend\":false,\"text\":\"MO\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"MT\",\"showlegend\":false,\"text\":\"MT\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"NE\",\"showlegend\":false,\"text\":\"NE\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"NV\",\"showlegend\":false,\"text\":\"NV\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"NH\",\"showlegend\":false,\"text\":\"NH\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"NJ\",\"showlegend\":false,\"text\":\"NJ\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"NM\",\"showlegend\":false,\"text\":\"NM\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"NY\",\"showlegend\":false,\"text\":\"NY\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"NC\",\"showlegend\":false,\"text\":\"NC\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"ND\",\"showlegend\":false,\"text\":\"ND\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"OH\",\"showlegend\":false,\"text\":\"OH\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"OK\",\"showlegend\":false,\"text\":\"OK\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"OR\",\"showlegend\":false,\"text\":\"OR\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"PA\",\"showlegend\":false,\"text\":\"PA\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"RI\",\"showlegend\":false,\"text\":\"RI\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"SC\",\"showlegend\":false,\"text\":\"SC\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"SD\",\"showlegend\":false,\"text\":\"SD\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"TN\",\"showlegend\":false,\"text\":\"TN\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"TX\",\"showlegend\":false,\"text\":\"TX\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"UT\",\"showlegend\":false,\"text\":\"UT\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"VT\",\"showlegend\":false,\"text\":\"VT\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"VA\",\"showlegend\":false,\"text\":\"VA\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"WA\",\"showlegend\":false,\"text\":\"WA\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"nan\",\"showlegend\":false,\"text\":\"nan\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"WV\",\"showlegend\":false,\"text\":\"WV\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"WI\",\"showlegend\":false,\"text\":\"WI\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"},{\"lat\":[null],\"locationmode\":\"USA-states\",\"lon\":[null],\"mode\":\"text\",\"name\":\"WY\",\"showlegend\":false,\"text\":\"WY\",\"textfont\":{\"color\":\"white\",\"size\":10},\"type\":\"scattergeo\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermap\":[{\"type\":\"scattermap\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"},\"margin\":{\"b\":0,\"l\":0,\"r\":0,\"t\":30}}},\"title\":{\"text\":\"Median AI Salary by State (with State Labels)\"},\"geo\":{\"scope\":\"usa\",\"showlakes\":true,\"lakecolor\":\"rgb(255, 255, 255)\"}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('82444678-c3ff-4213-b7b7-950765aa87f9');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };            </script>        </div>\n```\n:::\n:::\n\n\n#### Non AI Careers\n\n::: {#a3b4027f .cell execution_count=14}\n``` {.python .cell-code}\nnonai_state_medians = df[df['Career_Type'] == 'Non-AI Career'].groupby('STATE_NAME')['SALARY'].median().reset_index()\nnonai_state_medians['STATE_ABBR'] = nonai_state_medians['STATE_NAME'].map(state_abbrev)\n```\n:::\n\n\n::: {#6aa774fc .cell execution_count=15}\n``` {.python .cell-code}\nai_top = ai_state_medians[['STATE_NAME', 'SALARY']].rename(columns={'SALARY': 'AI_Median'})\nnonai_top = nonai_state_medians[['STATE_NAME', 'SALARY']].rename(columns={'SALARY': 'NonAI_Median'})\n\ncomparison = pd.merge(ai_top, nonai_top, on='STATE_NAME', how='inner')\ncomparison['Diff'] = comparison['AI_Median'] - comparison['NonAI_Median']\ncomparison.sort_values(by='Diff', ascending=False).head(10)\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>STATE_NAME</th>\n      <th>AI_Median</th>\n      <th>NonAI_Median</th>\n      <th>Diff</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>21</th>\n      <td>Michigan</td>\n      <td>143000.0</td>\n      <td>90760.0</td>\n      <td>52240.0</td>\n    </tr>\n    <tr>\n      <th>35</th>\n      <td>Oklahoma</td>\n      <td>142997.0</td>\n      <td>93650.0</td>\n      <td>49347.0</td>\n    </tr>\n    <tr>\n      <th>41</th>\n      <td>Tennessee</td>\n      <td>137375.0</td>\n      <td>89500.0</td>\n      <td>47875.0</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>Missouri</td>\n      <td>143000.0</td>\n      <td>95150.0</td>\n      <td>47850.0</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>Nevada</td>\n      <td>130500.0</td>\n      <td>84725.0</td>\n      <td>45775.0</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>South Carolina</td>\n      <td>133525.0</td>\n      <td>95325.0</td>\n      <td>38200.0</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>130775.0</td>\n      <td>93750.0</td>\n      <td>37025.0</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>Louisiana</td>\n      <td>131050.0</td>\n      <td>96100.0</td>\n      <td>34950.0</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Kentucky</td>\n      <td>130500.0</td>\n      <td>95800.0</td>\n      <td>34700.0</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>Nebraska</td>\n      <td>134500.0</td>\n      <td>100000.0</td>\n      <td>34500.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#f994606d .cell execution_count=16}\n``` {.python .cell-code}\n# Step 1: Get AI job counts per state\nai_counts = df[df['Career_Type'] == 'AI Career'].groupby('STATE_NAME')['SALARY'].count().reset_index(name='AI_Job_Count')\n\n# Step 2: Merge counts into comparison\ncomparison_with_counts = pd.merge(comparison, ai_counts, on='STATE_NAME', how='left')\n\n# Step 3: Filter for states with at least 100 AI jobs\nfiltered = comparison_with_counts[comparison_with_counts['AI_Job_Count'] >= 300]\n\n# Step 4: Take top 10 states by salary gap\ntop_realistic = filtered.sort_values(by='Diff', ascending=False).head(10).sort_values('AI_Median')\n\n# Step 5: Plot dumbbell chart\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(10, 6))\n\n# Draw connecting lines\nfor _, row in top_realistic.iterrows():\n    plt.plot([row['NonAI_Median'], row['AI_Median']], [row['STATE_NAME']] * 2, color='gray', linewidth=2)\n\n# Plot salary points\nplt.scatter(top_realistic['NonAI_Median'], top_realistic['STATE_NAME'], color='darkorange', label='Traditional Median Salary', s=80)\nplt.scatter(top_realistic['AI_Median'], top_realistic['STATE_NAME'], color='steelblue', label='AI Median Salary', s=80)\n\n# Annotate the difference\nfor _, row in top_realistic.iterrows():\n    plt.text(row['AI_Median'] + 1000, row['STATE_NAME'], f\"+${int(row['Diff']):,}\", fontsize=8, va='center', color='black')\n\nplt.xlabel(\"Median Salary ($)\")\nplt.title(\"AI vs Traditional Salaries (Top 10 States, ≥300 AI Jobs)\")\nplt.legend()\nplt.grid(axis='x', linestyle='--', alpha=0.5)\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](ai_vs_tradsalary_analysis_files/figure-html/cell-17-output-1.png){}\n:::\n:::\n\n\n### Insight: Top States with Highest AI Salary Advantage (≥300 AI Jobs)\n\nThis chart compares the median salaries of AI-related and traditional careers in states with substantial AI job markets (300+ postings). Each line connects the traditional (orange) and AI (blue) median salaries for a given state, with the annotated value indicating the salary gap.\n\nKey takeaways:\n- **Michigan, California, and Florida** exhibit the most substantial salary premiums for AI roles, with gaps exceeding **$30,000–$50,000**.\n- **New Jersey, Georgia, and Illinois** also show consistent advantages, reinforcing the value of AI specialization in large-scale markets.\n- By filtering for states with significant job volume, we ensure these salary gaps are **statistically meaningful**, not outliers from niche postings.\n\nThis visualization reinforces that **AI careers aren't just higher paying — they're transformationally more lucrative** in regions where demand and infrastructure support sustainable opportunities.\n\n",
    "supporting": [
      "ai_vs_tradsalary_analysis_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}