{
  "hash": "bed891fa21e44a1b37808a975ec3c790",
  "result": {
    "engine": "jupyter",
    "markdown": "<!--\n\n---\ntitle: \"Salaries Differ Across AI vs. Non-AI Careers\"\nsubtitle: \"Salary & Compensation Trends - Job Market Analysis 2024\"\nauthor:\n  - name: An LY\n    affiliations:\n      - id: bu\n        name: Boston University\n        city: Boston\n        state: MA\nformat: \n  html:\n    toc: true\n    number-sections: true\n    df-print: paged\n---\n\n\n\n-->\n\n## Introduction\n\nThe rapid evolution of Artificial Intelligence (AI) has significantly reshaped the job marketâ€”creating high-demand, specialized roles while also influencing the trajectory of traditional careers. This project explores how salaries differ between AI-related and non-AI occupations using real-world job postings from the Lightcast dataset. Through classification, aggregation, and visualization, we aim to uncover compensation trends across both career paths.\n\n## Dataset Overview\n\nWe analyzed a total of 72,498 U.S. job postings from the Lightcast database. Each role was tagged as either an AI Career or a Non-AI Career using keyword matching on the TITLE_NAME and NAICS_2022_2_NAME columns.\n\nAI Careers: 28,310 postings(e.g., Data Scientist, Machine Learning Engineer, AI Engineer)\n\nNon-AI Careers: 44,188 postings(e.g., Retail Sales, Administrative Assistant, Customer Service)\n\nA custom rule-based function was used to assign each job into one of the two groups. We then filtered the dataset to include only postings with valid salary entries.\n\n::: {#4ca0a8a2 .cell execution_count=1}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport os\ndf = pd.read_csv('lightcast_job_postings.csv', low_memory=False)\n\njob_counts = {'AI Careers': 28310, 'Non-AI Careers': 44188}\n\nplt.figure(figsize=(8, 4))\nplt.barh(list(job_counts.keys()), list(job_counts.values()), color=['steelblue', 'gray'])\nplt.xlabel(\"Number of Job Postings\")\nplt.title(\"Distribution of AI vs. Non-AI Job Postings\")\nplt.grid(axis='x', linestyle='--', alpha=0.6)\nplt.tight_layout()\n\nplt.savefig(\"DATA/job_distribution_bar_chart.png\", dpi=300, bbox_inches='tight')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](salaries-differ-across-ai-vs-non-ai-careers_files/figure-html/cell-2-output-1.png){}\n:::\n:::\n\n\n## Salary Summary Table\n\nThe salary summary table below provides a statistical overview of compensation across AI and non-AI careers. This analysis is derived strictly from the Lightcast job postings dataset after filtering for valid salary entries.\n\nKey metrics shown include mean, median, minimum, maximum, standard deviation, and the number of valid salary postings for each group. These statistics allow for a detailed comparison between the two career categories.\n\n::: {#b76c6076 .cell execution_count=2}\n``` {.python .cell-code}\nimport pandas as pd\nimport os\ndf = pd.read_csv('lightcast_job_postings.csv', low_memory=False)\n\ndf['SALARY'] = pd.to_numeric(df['SALARY'], errors='coerce')\n\ndef tag_ai(row):\n    title = str(row['TITLE_NAME']).lower()\n    industry = str(row['NAICS_2022_2_NAME']).lower()\n    \n    if ('ai' in title or \n        'artificial intelligence' in title or \n        'machine learning' in title or \n        'data scientist' in title or \n        'deep learning' in title or\n        'nlp' in title or\n        'computer vision' in title or\n        'robotics' in title or\n        'ml' in title or\n        'data engineer' in title or\n        'ml engineer' in title or\n        'scientist' in title or\n        ('professional, scientific, and technical services' in industry) or\n        ('information' in industry)):\n        return 'AI Career'\n    else:\n        return 'Non-AI Career'\n\ndf['Career_Type'] = df.apply(tag_ai, axis=1)\n\ndf_salary = df.dropna(subset=['SALARY'])\n\nmean_salary_df = df_salary.groupby('Career_Type')['SALARY'].mean().round(2).reset_index()\nmean_salary_df.columns = ['Career_Type', 'Mean_Salary ($)'] \n\ndf['SALARY'] = pd.to_numeric(df['SALARY'], errors='coerce')\ndf_salary = df.dropna(subset=['SALARY'])\n\nsummary_stats = df_salary.groupby('Career_Type')['SALARY'].agg(\n    count='count',\n    mean='mean',\n    median='median',\n    min='min',\n    max='max',\n    std='std'\n).round(2)\n\nsummary_stats = summary_stats.rename(columns={\n    'count': 'Valid Salary Entries',\n    'mean': 'Mean Salary ($)',\n    'median': 'Median Salary ($)',\n    'min': 'Minimum Salary ($)',\n    'max': 'Maximum Salary ($)',\n    'std': 'Standard Deviation ($)'\n})\n\nsummary_stats['Job Postings Count'] = [28310 if i == 'AI Career' else 44188 for i in summary_stats.index]\n\nsummary_stats = summary_stats[['Job Postings Count', 'Valid Salary Entries', 'Mean Salary ($)',\n                               'Median Salary ($)', 'Minimum Salary ($)', 'Maximum Salary ($)',\n                               'Standard Deviation ($)']]\nsummary_stats\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Job Postings Count</th>\n      <th>Valid Salary Entries</th>\n      <th>Mean Salary ($)</th>\n      <th>Median Salary ($)</th>\n      <th>Minimum Salary ($)</th>\n      <th>Maximum Salary ($)</th>\n      <th>Standard Deviation ($)</th>\n    </tr>\n    <tr>\n      <th>Career_Type</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>AI Career</th>\n      <td>28310</td>\n      <td>11713</td>\n      <td>133344.66</td>\n      <td>130500.0</td>\n      <td>23585.0</td>\n      <td>500000.0</td>\n      <td>43401.01</td>\n    </tr>\n    <tr>\n      <th>Non-AI Career</th>\n      <td>44188</td>\n      <td>19095</td>\n      <td>108512.87</td>\n      <td>102500.0</td>\n      <td>15860.0</td>\n      <td>500000.0</td>\n      <td>43552.64</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nThe table clearly shows that AI-related careers offer higher mean and median salaries compared to non-AI careers. The minimum salary for AI jobs is also notably higher, indicating a stronger salary floor. Although both groups have similar standard deviations, suggesting comparable salary variability, the overall compensation level for AI roles is substantially greater.\n\n## Salary Distribution Visualization\n\nThe following boxplot visualizes the salary distributions for AI versus non-AI career categories. It graphically represents the median, interquartile ranges, and outliers for each group.\n\n::: {#2e3c7c8b .cell execution_count=3}\n``` {.python .cell-code}\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\n\n# Load the dataset\ndf = pd.read_csv('lightcast_job_postings.csv', low_memory=False)\n\n# Tag careers before subsetting\ndef tag_ai(row):\n    title = str(row['TITLE_NAME']).lower()\n    industry = str(row['NAICS_2022_2_NAME']).lower()\n    if ('ai' in title or \n        'artificial intelligence' in title or \n        'machine learning' in title or \n        'data scientist' in title or \n        'deep learning' in title or \n        'nlp' in title or \n        'computer vision' in title or \n        'robotics' in title or \n        'ml' in title or \n        'data engineer' in title or \n        'ml engineer' in title or \n        'scientist' in title or \n        'professional, scientific, and technical services' in industry or \n        'information' in industry):\n        return 'AI Career'\n    else:\n        return 'Non-AI Career'\n\ndf['Career_Type'] = df.apply(tag_ai, axis=1)\n\n# Now subset only rows with valid salary\ndf_salary = df.dropna(subset=['SALARY'])\n\n# Plot without showing <Figure ...> output\nax = df_salary.boxplot(column='SALARY', by='Career_Type', figsize=(10,6))\nplt.title('Salary Comparison: AI vs Non-AI Careers')\nplt.suptitle('')\nplt.xlabel('Career Type')\nplt.ylabel('Salary ($)')\nplt.grid(True)\n\nplot_path = os.path.join('DATA', 'ai_vs_nonai_salary_comparison.png')\nplt.savefig(plot_path, dpi=300, bbox_inches='tight')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](salaries-differ-across-ai-vs-non-ai-careers_files/figure-html/cell-4-output-1.png){}\n:::\n:::\n\n\nThe boxplot highlights that AI careers have a higher median salary and a more compressed lower salary range compared to non-AI careers. While both groups exhibit high-end salary outliers (up to $500,000), non-AI careers show a greater spread of lower-end salaries. This suggests that AI careers offer more consistent and stable compensation, whereas non-AI jobs have more variability, particularly toward lower-paying positions.\n\n## Forecasting AI Career Trends \nTo explore future patterns, we used a simple linear regression model to forecast average AI salaries and job posting volumes over the next six months.\n\n::: {#d621bc71 .cell execution_count=4}\n``` {.python .cell-code}\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\n\n\ndf = pd.read_csv('lightcast_job_postings.csv', low_memory=False)\n\ndf['POSTED'] = pd.to_datetime(df['POSTED'], errors='coerce')\ndf['SALARY'] = pd.to_numeric(df['SALARY'], errors='coerce')\n\ndef tag_ai(row):\n    title = str(row['TITLE_NAME']).lower()\n    industry = str(row['NAICS_2022_2_NAME']).lower()\n    if ('ai' in title or 'artificial intelligence' in title or 'machine learning' in title or\n        'data scientist' in title or 'deep learning' in title or 'nlp' in title or\n        'computer vision' in title or 'robotics' in title or 'ml' in title or\n        'data engineer' in title or 'ml engineer' in title or 'scientist' in title or\n        'professional, scientific, and technical services' in industry or 'information' in industry):\n        return 'AI Career'\n    else:\n        return 'Non-AI Career'\n\ndf['Career_Type'] = df.apply(tag_ai, axis=1)\n\ndf_valid = df.dropna(subset=['POSTED'])\nmonthly_counts = df_valid.groupby([df_valid['POSTED'].dt.to_period('M'), 'Career_Type']) \\\n                         .size().unstack().fillna(0)\nmonthly_counts.index = monthly_counts.index.to_timestamp()\n\nplt.figure(figsize=(10, 5))\nmonthly_counts.plot(kind='line', marker='o', ax=plt.gca())\nplt.title(\"Monthly Job Postings: AI vs. Non-AI Careers\")\nplt.ylabel(\"Number of Postings\")\nplt.xlabel(\"Month\")\nplt.grid(True)\nplt.tight_layout()\njob_postings_path = \"DATA/monthly_job_postings_forecast.png\"\nplt.savefig(job_postings_path, dpi=300)\nplt.show()\n\ndf_ai = df[(df['Career_Type'] == 'AI Career') & (~df['SALARY'].isna())]\nmonthly_salary = df_ai.groupby(df_ai['POSTED'].dt.to_period('M'))['SALARY'].mean().dropna()\nmonthly_salary.index = monthly_salary.index.to_timestamp()\n\nX = sm.add_constant(range(len(monthly_salary)))\ny = monthly_salary.values\nmodel = sm.OLS(y, X).fit()\n\nfuture_periods = 6\nfuture_X = sm.add_constant(range(len(monthly_salary), len(monthly_salary) + future_periods))\nforecast = model.predict(future_X)\n\nlast_date = monthly_salary.index[-1]\nfuture_dates = [last_date + pd.DateOffset(months=i+1) for i in range(future_periods)]\n\nplt.figure(figsize=(10, 5))\nplt.plot(monthly_salary.index, monthly_salary.values, marker='o', label='Historical Avg Salary (AI)')\nplt.plot(future_dates, forecast, marker='x', linestyle='--', label='Forecast (Next 6 Months)')\nplt.title(\"Forecast: Average AI Salary Over Time\")\nplt.ylabel(\"Salary ($)\")\nplt.xlabel(\"Month\")\nplt.grid(True)\nplt.legend()\nplt.tight_layout()\nsalary_forecast_path = \"DATA/ai_salary_forecast.png\"\nplt.savefig(salary_forecast_path, dpi=300)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](salaries-differ-across-ai-vs-non-ai-careers_files/figure-html/cell-5-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display}\n![](salaries-differ-across-ai-vs-non-ai-careers_files/figure-html/cell-5-output-2.png){}\n:::\n:::\n\n\nThe analysis of monthly job postings reveals that Non-AI careers consistently dominate the U.S. job market, averaging around 9,000 postings per month. Despite experiencing a noticeable dip in July, Non-AI job volumes quickly rebounded in August and September, indicating strong demand recovery. In contrast, AI careers maintain a lower volume, typically ranging between 5,000 and 6,000 postings monthly. However, the trend among AI roles appears more stable, with minor fluctuations and a modest recovery following Julyâ€™s decline. This suggests that while fewer in quantity, AI job postings demonstrate resilience and steady momentum in hiring activity.\n\nLooking at the salary trends for AI careers, historical data from May to September 2024 shows moderate fluctuations, with a pronounced dip in August representing the lowest average salary in that period. Using a simple linear regression model, forecasts from October 2024 through March 2025 indicate a gradual decline in average AI salaries. Importantly, this downward trend does not suggest collapse but rather points to a stabilizing market. As AI technologies become more widespread and accessible, the normalization of compensationâ€”paired with a growing supply of skilled candidatesâ€”could be moderating previously inflated salary levels. Despite the projected dip, AI roles remain high-paying and continue to offer strong long-term potential.\n\n\n\n## Key Insights\n\nAI-related careers consistently offer higher salaries, with a mean of $133,344 and median of $130,500, compared to $108,513 and $102,500 respectively for non-AI roles.\n\nSalary variability remains relatively equal across both groups (~$43,000 standard deviation), but AI roles tend to avoid the lower-end salaries more common in non-AI positions.\n\nThe minimum salary for AI careers is substantially higher at $23,585, indicating a stronger baseline earning potential versus $15,860 for non-AI roles.\n\nThe maximum reported salary is identical across both categories ($500,000), likely reflecting high-level executive or specialized niche roles.\n\nAI job postings, while fewer in number, show consistent volume and a stable rebound after a mid-year dip, suggesting continued demand for AI talent.\n\nForecasting results predict a gradual decline in AI average salaries over the next six months, indicating potential market stabilization rather than contraction.\n\n## Conclusion\n\nThis analysis confirms that AI-related roles provide superior salary outcomes, both in average and median terms, and offer greater compensation stability at the lower end of the spectrum. Despite a projected slight decline in average salaries, AI positions remain highly competitive and rewarding.\n\nThese findings emphasize the value of developing AI-focused skill sets such as machine learning, NLP, and data engineering. For students, job seekers, and educators alike, aligning educational and career strategies with the AI sectorâ€™s continued evolution will be key to unlocking long-term financial and professional success.\n\n",
    "supporting": [
      "salaries-differ-across-ai-vs-non-ai-careers_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}