{
  "hash": "346ac84c6a1e9b72f1fad894fe3ce8fe",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Salaries Differ Across AI vs. Non-AI Careers\"\nsubtitle: \"Salary & Compensation Trends - Job Market Analysis 2024\"\nauthor:\n  - name: An LY\n    affiliations:\n      - id: bu\n        name: Boston University\n        city: Boston\n        state: MA\nformat: \n  html:\n    toc: true\n    number-sections: true\n    df-print: paged\n---\n\n\n\n\n## Introduction\n\nThe rapid evolution of Artificial Intelligence (AI) has significantly altered the job market, creating high-demand specialized roles while also impacting traditional careers. This project analyzes how salaries differ between AI-related and non-AI roles using real-world job postings extracted from the Lightcast dataset. The goal is to understand compensation trends between the two groups using statistical analysis and visualization.\n\n## Dataset Overview\n\nWe analyzed 72,498 job postings, classifying them into two categories:\n\n- **AI Careers**: 28,310 postings (e.g., Data Scientist, Machine Learning Engineer)\n- **Non-AI Careers**: 44,188 postings (e.g., Retail, Administration, Clerical)\n\n::: {#796b550f .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport os\n\n# 1. Load your dataset\ndf = pd.read_csv('lightcast_job_postings.csv')\n\n# 2. Ensure SALARY column is numeric\ndf['SALARY'] = pd.to_numeric(df['SALARY'], errors='coerce')\n\n# 3. Create Career_Type column\ndef tag_ai(row):\n    title = str(row['TITLE_NAME']).lower()\n    industry = str(row['NAICS_2022_2_NAME']).lower()\n    \n    if ('ai' in title or \n        'artificial intelligence' in title or \n        'machine learning' in title or \n        'data scientist' in title or \n        'deep learning' in title or\n        'nlp' in title or\n        'computer vision' in title or\n        'robotics' in title or\n        'ml' in title or\n        'data engineer' in title or\n        'ml engineer' in title or\n        'scientist' in title or\n        ('professional, scientific, and technical services' in industry) or\n        ('information' in industry)):\n        return 'AI Career'\n    else:\n        return 'Non-AI Career'\n\ndf['Career_Type'] = df.apply(tag_ai, axis=1)\n\n# 4. Remove rows with missing salary\ndf_salary = df.dropna(subset=['SALARY'])\n\n# Calculate mean salary\nmean_salary_df = df_salary.groupby('Career_Type')['SALARY'].mean().round(2).reset_index()\nmean_salary_df.columns = ['Career_Type', 'Mean_Salary ($)']\nmean_salary_df\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\honga\\AppData\\Local\\Temp\\ipykernel_24852\\2597484409.py:5: DtypeWarning:\n\nColumns (19,30) have mixed types. Specify dtype option on import or set low_memory=False.\n\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Career_Type</th>\n      <th>Mean_Salary ($)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>AI Career</td>\n      <td>133344.66</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Non-AI Career</td>\n      <td>108512.87</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nJobs were classified using `TITLE_NAME` and `NAICS_2022_2_NAME`. All calculations are derived strictly from the CSV file provided.\n\n::: {#8d737e09 .cell execution_count=2}\n``` {.python .cell-code}\nmean_salary_df = df_salary.groupby('Career_Type')['SALARY'].mean().round(2).reset_index()\nmean_salary_df.columns = ['Career_Type', 'Mean_Salary ($)']\nmean_salary_df\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Career_Type</th>\n      <th>Mean_Salary ($)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>AI Career</td>\n      <td>133344.66</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Non-AI Career</td>\n      <td>108512.87</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Salary Summary Table\n\nThe salary summary table below provides a statistical overview of compensation across AI and non-AI careers. This analysis is derived strictly from the Lightcast job postings dataset after filtering for valid salary entries.\n\nKey metrics shown include mean, median, minimum, maximum, standard deviation, and the number of valid salary postings for each group. These statistics allow for a detailed comparison between the two career categories.\n\n::: {#7f1392b6 .cell execution_count=3}\n``` {.python .cell-code}\nimport pandas as pd\nimport os\n\ndf['SALARY'] = pd.to_numeric(df['SALARY'], errors='coerce')\ndf_salary = df.dropna(subset=['SALARY'])\n\nsummary_stats = df_salary.groupby('Career_Type')['SALARY'].agg(\n    count='count',\n    mean='mean',\n    median='median',\n    min='min',\n    max='max',\n    std='std'\n).round(2)\n\nsummary_stats = summary_stats.rename(columns={\n    'count': 'Valid Salary Entries',\n    'mean': 'Mean Salary ($)',\n    'median': 'Median Salary ($)',\n    'min': 'Minimum Salary ($)',\n    'max': 'Maximum Salary ($)',\n    'std': 'Standard Deviation ($)'\n})\n\nsummary_stats['Job Postings Count'] = [28310 if i == 'AI Career' else 44188 for i in summary_stats.index]\n\nsummary_stats = summary_stats[['Job Postings Count', 'Valid Salary Entries', 'Mean Salary ($)',\n                               'Median Salary ($)', 'Minimum Salary ($)', 'Maximum Salary ($)',\n                               'Standard Deviation ($)']]\nsummary_stats\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Job Postings Count</th>\n      <th>Valid Salary Entries</th>\n      <th>Mean Salary ($)</th>\n      <th>Median Salary ($)</th>\n      <th>Minimum Salary ($)</th>\n      <th>Maximum Salary ($)</th>\n      <th>Standard Deviation ($)</th>\n    </tr>\n    <tr>\n      <th>Career_Type</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>AI Career</th>\n      <td>28310</td>\n      <td>11713</td>\n      <td>133344.66</td>\n      <td>130500.0</td>\n      <td>23585.0</td>\n      <td>500000.0</td>\n      <td>43401.01</td>\n    </tr>\n    <tr>\n      <th>Non-AI Career</th>\n      <td>44188</td>\n      <td>19095</td>\n      <td>108512.87</td>\n      <td>102500.0</td>\n      <td>15860.0</td>\n      <td>500000.0</td>\n      <td>43552.64</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nThe table clearly shows that AI-related careers offer higher mean and median salaries compared to non-AI careers. The minimum salary for AI jobs is also notably higher, indicating a stronger salary floor. Although both groups have similar standard deviations, suggesting comparable salary variability, the overall compensation level for AI roles is substantially greater.\n\n## Salary Distribution Visualization\n\nThe following boxplot visualizes the salary distributions for AI versus non-AI career categories. It graphically represents the median, interquartile ranges, and outliers for each group.\n\n::: {#7417b466 .cell execution_count=4}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(10,6))\ndf_salary.boxplot(column='SALARY', by='Career_Type')\nplt.title('Salary Comparison: AI vs Non-AI Careers')\nplt.suptitle('')\nplt.xlabel('Career Type')\nplt.ylabel('Salary ($)')\nplt.grid(True)\n\nplot_path = os.path.join('DATA', 'ai_vs_nonai_salary_comparison.png')\nplt.savefig(plot_path, dpi=300, bbox_inches='tight')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 960x576 with 0 Axes>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](Salaries Differ Across AI vs. Non-AI Careers_files/figure-html/cell-5-output-2.png){}\n:::\n:::\n\n\nThe boxplot highlights that AI careers have a higher median salary and a more compressed lower salary range compared to non-AI careers. While both groups exhibit high-end salary outliers (up to $500,000), non-AI careers show a greater spread of lower-end salaries. This suggests that AI careers offer more consistent and stable compensation, whereas non-AI jobs have more variability, particularly toward lower-paying positions.\n\n## Key Insights\n* AI Careers have a higher mean ($133,344) and median ($130,500) salary.\n\n* Non-AI Careers pay less on average ($108,513 mean; $102,500 median).\n\n* Both categories show similar salary spread (~$43,000 std).\n\n* Minimum salary is higher for AI roles ($23,585 vs. $15,860).\n\n* Maximum salaries are equivalent in both groups at $500,000.\n\n## Conclusion\n* This research, based solely on CSV data, confirms that AI-related roles are better compensated than non-AI roles. These findings highlight the financial value of acquiring AI-related skills like machine learning, data analysis, and deep learning.\n\n* Students, job seekers, and educators should align their strategies with labor market trends to stay competitive in a data-driven economy.\n\n",
    "supporting": [
      "Salaries Differ Across AI vs. Non-AI Careers_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}